
version: "3.9"
# _________________________Services_________________________
services:
# _______________________MLflow Tracking Server_________________________
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest   # MLflow image
    command: >
      mlflow server
      --backend-store-uri /mlruns
      --default-artifact-root /mlruns
      --host 0.0.0.0 --port 5000   
    ports:
      - "5000:5000"                       # expose MLflow UI at http://localhost:5000
    volumes:
      - ./mlruns:/mlruns                   # persist all runs/artifacts to host ./mlruns

# _____________________Orchestrator_________________________
  orchestrator:
    build: ./services/orch
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - EXPERIMENT=genai_ops_demo
      - APP_CONFIG=/app/configs/workflow.yaml
    volumes:
      - ./configs:/app/configs
      - ./libs:/app/libs
      - ./core:/app/core
      - ./databases:/app/databases
      - ./checkpoints:/checkpoints   # âœ… SQLite checkpoints mounted
      - ./eval_results:/app/eval_results   # âœ… persist evaluation results
    ports:
      - "8001:8001"
      - "8000:8000"   # âœ… expose Prometheus metrics

    env_file:
      - .env
    depends_on:
      - mlflow
# _____________________Evaluation Service_________________________
  evaluation:
    build: ./services/evaluation        # ðŸ‘ˆ your new service
    ports:
      - "8101:8101"                    # host:container (maps service to localhost:8101)
      - "8111:8111"                    # host:container (maps Prometheus metrics to localhost:8111)
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - EXPERIMENT=genai_ops_demo
      - GROQ_API_KEY=${GROQ_API_KEY}
    volumes:
      - ./configs:/app/configs
      - ./libs:/app/libs
      - ./core:/app/core
      - ./databases:/app/databases
      - ./eval_results:/app/eval_results   # persist evaluation results
    env_file:
      - .env
    depends_on:
      - mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 15s
      timeout: 5s
      retries: 3
# _____________________Streamlit UI_________________________
  ui:
    build: ./services/ui
    ports:
      - "8501:8501"
    volumes:
      - ./configs:/app/configs:ro
    environment:
      - STREAMLIT_BROWSER_GATHERUSAGESTATS=false
    env_file:
      - .env
    depends_on:
      - orchestrator
# _____________________Prometheus & Grafana_________________________
  prometheus:
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - mlflow

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=prashant.jyanth@gmail.com
      - GF_SMTP_PASSWORD=agmn pkqf jiwz cdka
      - GF_SMTP_FROM_ADDRESS=prashant.jyanth@gmail.com
      - GF_SMTP_FROM_NAME=Grafana
      - GF_SMTP_SKIP_VERIFY=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_ALERTING_ENABLED=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_METRICS_ENABLED=true
      - GF_METRICS_INTERVAL_SECONDS=2
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
      - ./infra/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
# _____________________MLflow Registry Manager_________________________
  mlflow_registry_manager:
    build: ./services/mlflow_registry_manager
    container_name: mlflow_registry_manager_service
    ports:
      - "8181:8181"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./configs:/app/configs
      - ./libs:/app/libs
      - ./core:/app/core
      - ./databases:/app/databases
    env_file:
      - .env
    depends_on:
      - mlflow

